# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overriden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

management:
    context-path: /management
    security:
        enabled: false
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
    add-application-context-header: false

spring:
    application:
        name: tcs
    profiles:
        active: local
        include:
        - swagger
        - prometheus
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use gulp + BrowserSync for livereload
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:mysql://${DBHOST:localhost}:${DBPORT:3306}/${DBNAME:tcs}?useUnicode=true&characterEncoding=utf8&useSSL=${USE_SSL:false}
        username: ${DBUSER:root}
        password: ${DBPASSWORD:}
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
                cacheResultSetMetadata: true
                cacheServerConfiguration: true
                elideSetAutoCommits: true
                maintainTimeStats: false
                rewriteBatchedStatements: true
                useLocalSessionState: true
            maximumPoolSize: 20
    jackson:
        serialization.write_dates_as_timestamps: false
        serialization.indent_output: true
    jpa:
        open-in-view: false
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
                implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        database: MYSQL
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
    messages:
        basename: i18n/messages
        cache-seconds: 1
    mvc:
        favicon:
            enabled: false
    http:
        multipart:
            max-file-size: 10MB
            max-request-size: 10MB
    jdbc:
        template:
            query-timeout: 120
    mail:
        host: ${DBHOST:localhost}
        port: 25
        username:
        password:


flyway:
    baseline-description: #
    baseline-version: 1 # version to start migration
    baseline-on-migrate: true
    check-location: false # Check that migration scripts location exists.
    clean-on-validation-error: false
    flyway.enabled: true # Enable flyway.
    encoding: #
    ignore-failed-future-migration: #
    init-sqls: # SQL statements to execute to initialize a connection immediately after obtaining it.
    locations: classpath:db/migration
    out-of-order: true
    password: ${DBPASSWORD:}
    placeholder-prefix:
    placeholder-replacement:
    placeholder-suffix:
    placeholders.*:
    schemas: ${DBNAME:tcs}
    sql-migration-prefix: V
    sql-migration-separator:
    sql-migration-suffix: .sql
    table:  #
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    validate-on-migrate:  #
    initOnMigrate: true

security:
    basic:
        enabled: false
    user:
        name: admin
        password: admin

server:
    port: 8093
    session:
        cookie:
            http-only: true
    context-path: /tcs
    connection-timeout: 120
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024

info:
    project:
        version: #project.version#

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://jhipster.github.io/common-application-properties/
# ===================================================================

jhipster:
    async:
        core-pool-size: 2
        max-pool-size: 50
        queue-capacity: 10000
        # By default CORS is disabled. Uncomment to enable.
        #cors:
        #allowed-origins: "*"
        #allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        #allowed-headers: "*"
        #exposed-headers:
        #allow-credentials: true
        #max-age: 1800
    swagger:
        default-include-pattern: /api/.*
        title: tcs API
        description: tcs API documentation
        version: 0.0.1
        terms-of-service-url:
        contact-name:
        contact-url:
        contact-email:
        license:
        license-url:
    ribbon:
        display-on-active-profiles: dev
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
    security:
        authentication:
            jwt:
                secret: my-secret-token-to-change-in-production
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: tcs@localhost
        base-url: http://127.0.0.1:8093
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite: # Use the "graphite" Maven profile to have the Graphite dependencies
            enabled: false
            host: localhost
            port: 2003
            prefix: tcs
        prometheus: # Use the "prometheus" Maven profile to have the Prometheus dependencies
            enabled: true
            endpoint: http://127.0.0.1:8093/prometheusMetrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            reportFrequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512


# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://jhipster.github.io/common-application-properties/
# ===================================================================

application:

logging:
    file: ${LOG_DIR:${HOME}}/tcs.log

# ===================================================================
# Azure block blob storage properties
# ===================================================================

auto.generate.npn: true
